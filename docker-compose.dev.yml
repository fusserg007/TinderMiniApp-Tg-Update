services:
  db:
    image: mongo:4.4.18
    restart: always
    env_file:
      - .env
    ports:
      - 27017:27017
    volumes:
      - db_data:/data/db
      - ./mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro

  object-storage:
    image: bitnami/minio:latest
    restart: always
    environment:
      - MINIO_ROOT_USER=kundin
      - MINIO_ROOT_PASSWORD=very-secret-password
      - MINIO_SKIP_CLIENT=yes
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_storage:/data

  imgproxy:
    image: darthsim/imgproxy
    env_file:
      - .env
    environment:
      - IMGPROXY_USE_S3=true
      - IMGPROXY_S3_ENDPOINT=http://object-storage:9000

  landing:
    build:
      context: .
      dockerfile: Dockerfile.landing
    restart: always
    ports:
      - 3000:3000
    environment:
      - PORT=3000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 5000:4000
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - PORT=4000
      - AWS_ENDPOINT=http://object-storage:9000
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - db
      - object-storage

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3000:5173
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - PORT=5173
      - BACKEND_URL=http://backend:4000
      - IMGPROXY_URL=http://imgproxy:8080
      - AWS_BUCKET=at-first-sight
    depends_on:
      - backend
      - imgproxy

volumes:
  db_data:
  minio_storage: